@startuml
interface AbstractProductA {
  {abstract} +doA()
}
interface AbstractProductB {
  {abstract} +doB()
}
interface AbstractFactory {
  {abstract} +createA() : AbstractProductA
  {abstract} +createB() : AbstractProductB
}
interface Client
Client -down-> AbstractFactory

AbstractFactory .up.> AbstractProductA
AbstractFactory .up.> AbstractProductB

AbstractProductA <|-- ConcreteProductA1
AbstractProductA <|-- ConcreteProductA2
AbstractProductB <|-- ConcreteProductB1
AbstractProductB <|-- ConcreteProductB2

class ConcreteProductA1 {
  +doA()
}
class ConcreteProductA2 {
  +doA()
}
class ConcreteProductB1 {
  +doB()
}
class ConcreteProductB2 {
  +doB()
}

ConcreteProductA1 <.. ConcreteFactory1
ConcreteProductB1 <.. ConcreteFactory1
AbstractFactory <|-- ConcreteFactory1

ConcreteProductA2 <.. ConcreteFactory2
ConcreteProductB2 <.. ConcreteFactory2
AbstractFactory <|-- ConcreteFactory2

class ConcreteFactory1 {
  +createA() : ConcreteProductA1
  +createB() : ConcreteProductB1
}
class ConcreteFactory2 {
  +createA() : ConcreteProductA2
  +createB() : ConcreteProductB2
}

hide empty attributes
hide empty methods
@enduml
